215343,179135,265269,180518,
147237,214652,227319,
103188,183866,222202,191383,
191890,109873,133792,
109860,156517,74715,69479,
120718,68687,45030,37129,
60886,62786,31732,28295,
32148,40005,14809,11468,
17749,17135,13005,6799,
7717,9718,4810,3285,4249,
3036,3287,1759,2402,1738,
1010,2177,2063,1623,
1730,1248,1895,2463,2276,
3589,4195,2823,3450,4157,
4570,2719,4083,6586,
4617,5137,7796,6564,7405,
7298,7867,7580,9771,11647,
25827,25616,15632,10454,
13278,16858,27550,18719,
48277,28639,32971,20762,
17972,18975,15609,18617,
6124,2116,3044)
)
library(ggplot2)
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs()
library(ggplot2)
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time",
x = "Year",
y = "Number of Cases"
) +
theme_minimal())
library(ggplot2)
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time",
x = "Year",
y = "Number of Cases"
) +
theme_minimal()
library(ggplot2)
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
theme_minimal()
library(ggplot2)
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
library(ggplot2)
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
)
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
geom_vline(xintercept=1946, 1996)+
geom_text(wP, aP)
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
geom_vline(xintercept = c(1946, 1996), linetype = "dashed", color = "red") +
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
geom_vline(xintercept = c(1946, 1996), linetype = "dashed", color = "red")
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
geom_vline(xintercept = c(1946, 1996), linetype = "dashed", color = "blue", "red")
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
geom_vline(xintercept = 1946, linetype = "dashed", color = "blue")+
geom_vline(xintercept = 1996, linetype = "dashed", color = "red")
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
geom_vline(xintercept = 1946, linetype = "dashed", color = "blue", geom_text("wP"))+
geom_vline(xintercept = 1996, linetype = "dashed", color = "red", geom_text("aP"))
ggplot(cdc)+
aes(x=Year, y=Cases, geom_text("aP"))+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
geom_vline(xintercept = 1946, linetype = "dashed", color = "blue")+
geom_vline(xintercept = 1996, linetype = "dashed", color = "red")
ggplot(cdc)+
aes(x=Year, y=Cases)+
geom_point()+
geom_line()+
labs(
title = "Pertussis Cases Over Time (1922-2019)",
x = "Year",
y = "Number of Cases"
) +
geom_vline(xintercept = 1946, linetype = "dashed", color = "blue")+
geom_vline(xintercept = 1996, linetype = "dashed", color = "red")
# Allows us to read, write and process JSON data
library(jsonlite)
subject <- read_json("https://www.cmi-pb.org/api/subject", simplifyVector = TRUE)
head(subject, 3)
table(subject$infancy_vac)
table(subject$biological_sex)
table(subject$race, subject$biological_sex) )
table(subject$race, subject$biological_sex)
library(lubridate)
data.table::data.table(
Year = c(1922L,
1923L,1924L,1925L,1926L,1927L,1928L,
1929L,1930L,1931L,1932L,1933L,1934L,1935L,
1936L,1937L,1938L,1939L,1940L,1941L,
1942L,1943L,1944L,1945L,1946L,1947L,1948L,
1949L,1950L,1951L,1952L,1953L,1954L,
1955L,1956L,1957L,1958L,1959L,1960L,
1961L,1962L,1963L,1964L,1965L,1966L,1967L,
1968L,1969L,1970L,1971L,1972L,1973L,
1974L,1975L,1976L,1977L,1978L,1979L,1980L,
1981L,1982L,1983L,1984L,1985L,1986L,
1987L,1988L,1989L,1990L,1991L,1992L,1993L,
1994L,1995L,1996L,1997L,1998L,1999L,
2000L,2001L,2002L,2003L,2004L,2005L,
2006L,2007L,2008L,2009L,2010L,2011L,2012L,
2013L,2014L,2015L,2016L,2017L,2018L,
2019L,2020L,2021L,2022L),
No..Reported.Pertussis.Cases = c(107473,
164191,165418,152003,202210,181411,
161799,197371,166914,172559,215343,179135,
265269,180518,147237,214652,227319,103188,
183866,222202,191383,191890,109873,
133792,109860,156517,74715,69479,120718,
68687,45030,37129,60886,62786,31732,28295,
32148,40005,14809,11468,17749,17135,
13005,6799,7717,9718,4810,3285,4249,
3036,3287,1759,2402,1738,1010,2177,2063,
1623,1730,1248,1895,2463,2276,3589,
4195,2823,3450,4157,4570,2719,4083,6586,
4617,5137,7796,6564,7405,7298,7867,
7580,9771,11647,25827,25616,15632,10454,
13278,16858,27550,18719,48277,28639,
32971,20762,17972,18975,15609,18617,6124,
2116,3044)
)
install.packages("lubridate")
library(lubridate)
# Use todays date to calculate age in days
subject$age <- today() - ymd("Year_of_birth")
# Use todays date to calculate age in days
subject$age <- today() - ymd("year_of_birth")
# Use todays date to calculate age in days
subject$age <- today() - ymd(subject$year_of_birth)
# Use todays date to calculate age in days
subject$age <- today() - ymd(subject$year_of_birth)
subject$age
# Use todays date to calculate age in days
subject$age <- today() - ymd(subject$year_of_birth)
library(dplyr)
ap <- subject %>% filter(infancy_vac == "aP")
round( summary( time_length( ap$age, "years" ) ) )
# wP
wp <- subject %>% ___(___ == "wP")
# wP
wp <- subject %>% filter(infancy_vac == "wP")
ap <- subject %>% filter(infancy_vac == "aP")
round( summary( time_length( wp$age, "years" ) ) )
round( summary( time_length( ap$age, "years" ) ) )
summary(wp$age)
summary(ap$age)
t.test(wp$age, ap$age)
library(dplyr)
# wP
wp <- subject %>% filter(infancy_vac == "wP")
ap <- subject %>% filter(infancy_vac == "aP")
round( summary( time_length( wp$age, "years" ) ) )
round( summary( time_length( ap$age, "years" ) ) )
summary(wp$age)
summary(ap$age)
t.test(wp$age, ap$age)
# wP
wp <- subject %>% filter(infancy_vac == "wP")
ap <- subject %>% filter(infancy_vac == "aP")
round( summary( time_length( wp$age, "years" ) ) )
round( summary( time_length( ap$age, "years" ) ) )
int <- ymd(subject$date_of_boost) - ymd(subject$year_of_birth)
age_at_boost <- time_length(int, "year")
head(age_at_boost)
ggplot(subject) +
aes(time_length(age, "year"),
fill=as.factor(infancy_vac)) +
geom_histogram(show.legend=FALSE) +
facet_wrap(vars(infancy_vac), nrow=2) +
xlab("Age in years")
# Or use wilcox.test()
x <- t.test(time_length( wp$age, "years" ),
time_length( ap$age, "years" ))
x$p.value
# Complete the API URLs...
specimen <- read_json("___/specimen", simplifyVector = TRUE)
# Complete the API URLs...
specimen <- read_json(""https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
meta <- full_join(specimen, subject)
dim(meta)
head(meta)
meta <- inner_join(specimen, subject)
dim(meta)
head(meta)
meta <- left_join(specimen, subject)
dim(meta)
head(meta)
meta <- inner_join(specimen, subject)
dim(meta)
head(meta)
meta <- full_join(specimen, subject)
dim(meta)
head(meta)
abdata <- inner_join(titer, meta)
dim(abdata)
meta <- inner_join(specimen, subject)
dim(meta)
head(meta)
meta <- full_join(specimen, subject)
dim(meta)
head(meta)
table(abdata$isotype)
abdata <- full_join(titer, meta)
dim(abdata)
table(abdata$isotype)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/titer", simplifyVector = TRUE)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/titer", simplifyVector = TRUE)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/subject", simplifyVector = TRUE)
meta <- full_join(specimen, subject)
dim(meta)
head(meta)
abdata <- full_join(titer, meta)
dim(abdata)
meta <- full_join(specimen, titer)
dim(meta)
head(meta)
abdata <- full_join(titer, meta)
dim(abdata)
table(abdata$isotype)
meta <- full_join(specimen, subject)
dim(meta)
head(meta)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/titer", simplifyVector = TRUE)
str(titer)
head(titer)
meta <- full_join(specimen, subject)
dim(meta)
head(meta)
abdata <- full_join(titer, meta)
dim(abdata)
table(abdata$isotype)
# Check the columns used for the join
colnames(titer)
colnames(meta)
# Ensure `specimen_id` is a common column in both tables
if ("specimen_id" %in% colnames(titer) & "specimen_id" %in% colnames(meta)) {
print("specimen_id column exists in both tables")
} else {
print("specimen_id column is missing in one of the tables")
}
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/ab_titer", simplifyVector = TRUE)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/antibody_titer", simplifyVector = TRUE)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/titer", simplifyVector = TRUE)
library(jsonlite)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/titer", simplifyVector = TRUE)
library(jsonlite)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/titer", simplifyVector = TRUE)
library(dplyr)
library(jsonlite)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/titer", simplifyVector = TRUE)
library(dplyr)
library(jsonlite)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/titer", simplifyVector = TRUE)
library(dplyr)
library(jsonlite)
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("https://www.cmi-pb.org/api/plasma_ab_titer", simplifyVector = TRUE)
meta <- full_join(specimen, subject)
dim(meta)
head(meta)
abdata <- full_join(titer, meta)
dim(abdata)
table(abdata$isotype)
table(abdata$dataset)
igg <- abdata %>% filter(isotype == "IgG")
head(igg)
ggplot(igg) +
aes(MFI_normalised, antigen, col = infancy_vac) +
geom_boxplot() +
facet_wrap(~visit)ggplot(igg) +
ggplot(igg) +
aes(MFI_normalised, antigen, col = infancy_vac) +
geom_boxplot() +
facet_wrap(visit)ggplot(igg) +
ggplot(igg) +
aes(MFI, antigen) +
geom_point() +
xlim(0,75) +
facet_wrap(vars(visit), nrow=2)
ggplot(igg) +
aes(MFI, antigen) +
geom_box() +
xlim(0,75) +
facet_wrap(vars(visit), nrow=2)
ggplot(igg) +
aes(MFI, antigen) +
geom_boxplot() +
xlim(0,75) +
facet_wrap(vars(visit), nrow=2)
ggplot(igg) +
aes(MFI, antigen) +
geom_bar() +
xlim(0,75) +
facet_wrap(vars(visit), nrow=2)
ggplot(igg) +
aes(MFI, antigen) +
geom_point() +
xlim(0,75) +
facet_wrap(vars(visit), nrow=2)
ggplot(igg) +
aes(MFI_normalised, antigen) +
geom_boxplot() +
facet_wrap(~infancy_vac)
ggplot(igg) +
aes(MFI, antigen) +
geom_boxplot() +
facet_wrap(~infancy_vac)
ggplot(igg) +
aes(MFI_normalised, antigen) +
geom_boxplot() +
facet_wrap(~infancy_vac)
ggplot(igg) +
aes(MFI_normalized, antigen) +
geom_boxplot() +
xlim(0,75) +
facet_wrap(vars(visit), nrow=2)
ggplot(igg) +
aes(MFI_normalised, antigen) +
geom_boxplot() +
xlim(0,75) +
facet_wrap(vars(visit), nrow=2)
ggplot(igg) +
aes(MFI_normalised, antigen, col=infancy_vac ) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(vars(visit), nrow=2) +
xlim(0,75) +
theme_bw()
igg %>% filter(visit != 8) %>%
ggplot() +
aes(MFI_normalised, antigen, col=infancy_vac ) +
geom_boxplot(show.legend = FALSE) +
xlim(0,75) +
facet_wrap(vars(infancy_vac, visit), nrow=2)
filter(igg, antigen=="OVA") %>%
ggplot() +
aes(MFI_normalised, col=infancy_vac) +
geom_boxplot(show.legend = TRUE) +
facet_wrap(vars(visit)) +
theme_bw()
filter(igg, antigen=="FIM2/3") %>%
ggplot() +
aes(MFI_normalised, col=infancy_vac) +
geom_boxplot(show.legend = TRUE) +
facet_wrap(vars(visit)) +
theme_bw()
abdata.21 <- abdata %>% filter(dataset == "2021_dataset")
abdata.21 %>%
filter(isotype == "IgG",  antigen == "PT") %>%
ggplot() +
aes(x=planned_day_relative_to_boost,
y=MFI_normalised,
col=infancy_vac,
group=subject_id) +
geom_point() +
geom_line() +
geom_vline(xintercept=0, linetype="dashed") +
geom_vline(xintercept=14, linetype="dashed") +
labs(title="2021 dataset IgG PT",
subtitle = "Dashed lines indicate day 0 (pre-boost) and 14 (apparent peak levels)")
abdata.20 <- abdata %>% filter(dataset == "2020_dataset")
abdata.20 %>%
filter(isotype == "IgG",  antigen == "PT") %>%
ggplot() +
aes(x=planned_day_relative_to_boost,
y=MFI_normalised,
col=infancy_vac,
group=subject_id) +
geom_point() +
geom_line() +
geom_vline(xintercept=0, linetype="dashed") +
geom_vline(xintercept=14, linetype="dashed") +
labs(title="2020 dataset IgG PT",
subtitle = "Dashed lines indicate day 0 (pre-boost) and 14 (apparent peak levels)")
url <- "https://www.cmi-pb.org/api/v2/rnaseq?versioned_ensembl_gene_id=eq.ENSG00000211896.7"
rna <- read_json(url, simplifyVector = TRUE)
#meta <- inner_join(specimen, subject)
ssrna <- inner_join(rna, meta)
ggplot(ssrna) +
aes(visit), tpm, group=subject_id) +
ggplot(ssrna) +
aes(visit, tpm), group=subject_id) +
ggplot(ssrna) +
aes(visit, tpm), group=subject_id) +
ggplot(ssrna) +
aes(visit, tpm, group=subject_id) +
geom_point() +
geom_line(alpha=0.2)
ssrna %>%
filter(visit==4) %>%
ggplot() +
aes(tpm, col=infancy_vac) + geom_density() +
geom_rug()
